# this is needed for Docker's internal DNS resolution
resolver 127.0.0.11 valid=5s ipv6=off;

# websockets
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# redirect to https
server {
  listen 80 default_server;
  server_name _;

  return 301 https://$host$request_uri;
}


server {
  listen 443 default_server ssl http2;

  server_name budabuda.duckdns.org;

  ssl_certificate /etc/letsencrypt/live/budabuda.duckdns.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/budabuda.duckdns.org/privkey.pem;

  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  if ($lan_ip = lan) {
    set $allowed yes;
  }

  if ($orange_ip = orange) {
    set $allowed yes;
  }

  if ($allowed = no) {
    return 418;
  }

  set $upstreamServer http://192.168.100.11:8123;

  location / {
    client_max_body_size 0;

    proxy_set_header Host $host;
    proxy_set_header Proxy "";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_connect_timeout 60s;
    proxy_read_timeout 36000s;
    proxy_redirect off;

    proxy_pass_header Authorization;

    proxy_pass $upstreamServer;
  }

  location /healthz {
    access_log off;
    add_header Content-Type text/plain;
    return 200 "OK";
  }

  location /metrics/nginx {
    access_log off;
    allow 127.0.0.0/24;
    deny all;
    proxy_store off;
    stub_status;
  }

  error_page 500 502 503 504  /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
}
